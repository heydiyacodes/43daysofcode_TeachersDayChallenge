//leetcode 49. Group Anagrams 
class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        unordered_map<string, vector<string>> strf;  //creating strf (hash) like a key

        for (string& s : strs) {
            string key = s;
            sort(key.begin(), key.end());
            strf[key].push_back(s);  //gen syntax
        }

        vector<vector<string>> result;
        for (auto& entry : strf) {
            result.push_back(entry.second);
        }

        return result;        
    }
};

//leetcode 100. Same Tree
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        if(p==NULL && q==NULL) return true;
        if(p==NULL || q==NULL) return false;
        if(p->val == q->val) return {isSameTree(p->left,q->left) && isSameTree(p->right,q->right)};
        return false;
    }
};
